/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ERC20Token,
  ERC20TokenInterface,
} from "../../contracts/ERC20Token";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "initialSupply_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "recipients",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "airdrop",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516122183803806122188339818101604052810190610032919061063c565b338383816003908161004491906108de565b50806004908161005491906108de565b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100c95760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100c091906109f1565b60405180910390fd5b6100d88161011560201b60201c565b5061010d336100eb6101db60201b60201c565b600a6100f79190610b7b565b836101029190610bc6565b6101e460201b60201c565b505050610c9d565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60006012905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036102565760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161024d91906109f1565b60405180910390fd5b6102686000838361026c60201b60201c565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036102be5780600260008282546102b29190610c08565b92505081905550610391565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561034a578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161034193929190610c4b565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036103da5780600260008282540392505081905550610427565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516104849190610c82565b60405180910390a3505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6104f8826104af565b810181811067ffffffffffffffff82111715610517576105166104c0565b5b80604052505050565b600061052a610491565b905061053682826104ef565b919050565b600067ffffffffffffffff821115610556576105556104c0565b5b61055f826104af565b9050602081019050919050565b60005b8381101561058a57808201518184015260208101905061056f565b60008484015250505050565b60006105a96105a48461053b565b610520565b9050828152602081018484840111156105c5576105c46104aa565b5b6105d084828561056c565b509392505050565b600082601f8301126105ed576105ec6104a5565b5b81516105fd848260208601610596565b91505092915050565b6000819050919050565b61061981610606565b811461062457600080fd5b50565b60008151905061063681610610565b92915050565b6000806000606084860312156106555761065461049b565b5b600084015167ffffffffffffffff811115610673576106726104a0565b5b61067f868287016105d8565b935050602084015167ffffffffffffffff8111156106a05761069f6104a0565b5b6106ac868287016105d8565b92505060406106bd86828701610627565b9150509250925092565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061071957607f821691505b60208210810361072c5761072b6106d2565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026107947fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610757565b61079e8683610757565b95508019841693508086168417925050509392505050565b6000819050919050565b60006107db6107d66107d184610606565b6107b6565b610606565b9050919050565b6000819050919050565b6107f5836107c0565b610809610801826107e2565b848454610764565b825550505050565b600090565b61081e610811565b6108298184846107ec565b505050565b5b8181101561084d57610842600082610816565b60018101905061082f565b5050565b601f8211156108925761086381610732565b61086c84610747565b8101602085101561087b578190505b61088f61088785610747565b83018261082e565b50505b505050565b600082821c905092915050565b60006108b560001984600802610897565b1980831691505092915050565b60006108ce83836108a4565b9150826002028217905092915050565b6108e7826106c7565b67ffffffffffffffff811115610900576108ff6104c0565b5b61090a8254610701565b610915828285610851565b600060209050601f8311600181146109485760008415610936578287015190505b61094085826108c2565b8655506109a8565b601f19841661095686610732565b60005b8281101561097e57848901518255600182019150602085019450602081019050610959565b8683101561099b5784890151610997601f8916826108a4565b8355505b6001600288020188555050505b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006109db826109b0565b9050919050565b6109eb816109d0565b82525050565b6000602082019050610a0660008301846109e2565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b6001851115610a9257808604811115610a6e57610a6d610a0c565b5b6001851615610a7d5780820291505b8081029050610a8b85610a3b565b9450610a52565b94509492505050565b600082610aab5760019050610b67565b81610ab95760009050610b67565b8160018114610acf5760028114610ad957610b08565b6001915050610b67565b60ff841115610aeb57610aea610a0c565b5b8360020a915084821115610b0257610b01610a0c565b5b50610b67565b5060208310610133831016604e8410600b8410161715610b3d5782820a905083811115610b3857610b37610a0c565b5b610b67565b610b4a8484846001610a48565b92509050818404811115610b6157610b60610a0c565b5b81810290505b9392505050565b600060ff82169050919050565b6000610b8682610606565b9150610b9183610b6e565b9250610bbe7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484610a9b565b905092915050565b6000610bd182610606565b9150610bdc83610606565b9250828202610bea81610606565b91508282048414831517610c0157610c00610a0c565b5b5092915050565b6000610c1382610606565b9150610c1e83610606565b9250828201905080821115610c3657610c35610a0c565b5b92915050565b610c4581610606565b82525050565b6000606082019050610c6060008301866109e2565b610c6d6020830185610c3c565b610c7a6040830184610c3c565b949350505050565b6000602082019050610c976000830184610c3c565b92915050565b61156c80610cac6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063672434821161009757806395d89b411161006657806395d89b4114610260578063a9059cbb1461027e578063dd62ed3e146102ae578063f2fde38b146102de576100f5565b806367243482146101ec57806370a0823114610208578063715018a6146102385780638da5cb5b14610242576100f5565b806323b872dd116100d357806323b872dd14610166578063313ce5671461019657806340c10f19146101b457806342966c68146101d0576100f5565b806306fdde03146100fa578063095ea7b31461011857806318160ddd14610148575b600080fd5b6101026102fa565b60405161010f9190610f91565b60405180910390f35b610132600480360381019061012d9190611051565b61038c565b60405161013f91906110ac565b60405180910390f35b6101506103af565b60405161015d91906110d6565b60405180910390f35b610180600480360381019061017b91906110f1565b6103b9565b60405161018d91906110ac565b60405180910390f35b61019e6103e8565b6040516101ab9190611160565b60405180910390f35b6101ce60048036038101906101c99190611051565b6103f1565b005b6101ea60048036038101906101e5919061117b565b610407565b005b61020660048036038101906102019190611263565b610414565b005b610222600480360381019061021d91906112e4565b6104c9565b60405161022f91906110d6565b60405180910390f35b610240610511565b005b61024a610525565b6040516102579190611320565b60405180910390f35b61026861054f565b6040516102759190610f91565b60405180910390f35b61029860048036038101906102939190611051565b6105e1565b6040516102a591906110ac565b60405180910390f35b6102c860048036038101906102c3919061133b565b610604565b6040516102d591906110d6565b60405180910390f35b6102f860048036038101906102f391906112e4565b61068b565b005b606060038054610309906113aa565b80601f0160208091040260200160405190810160405280929190818152602001828054610335906113aa565b80156103825780601f1061035757610100808354040283529160200191610382565b820191906000526020600020905b81548152906001019060200180831161036557829003601f168201915b5050505050905090565b600080610397610711565b90506103a4818585610719565b600191505092915050565b6000600254905090565b6000806103c4610711565b90506103d185828561072b565b6103dc8585856107c0565b60019150509392505050565b60006012905090565b6103f96108b4565b610403828261093b565b5050565b61041133826109bd565b50565b81819050848490501461045c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104539061144d565b60405180910390fd5b60005b848490508110156104c2576104b5338686848181106104815761048061146d565b5b905060200201602081019061049691906112e4565b8585858181106104a9576104a861146d565b5b905060200201356107c0565b808060010191505061045f565b5050505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6105196108b4565b6105236000610a3f565b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461055e906113aa565b80601f016020809104026020016040519081016040528092919081815260200182805461058a906113aa565b80156105d75780601f106105ac576101008083540402835291602001916105d7565b820191906000526020600020905b8154815290600101906020018083116105ba57829003601f168201915b5050505050905090565b6000806105ec610711565b90506105f98185856107c0565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6106936108b4565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036107055760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016106fc9190611320565b60405180910390fd5b61070e81610a3f565b50565b600033905090565b6107268383836001610b05565b505050565b60006107378484610604565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156107ba57818110156107aa578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016107a19392919061149c565b60405180910390fd5b6107b984848484036000610b05565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108325760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016108299190611320565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108a45760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161089b9190611320565b60405180910390fd5b6108af838383610cdc565b505050565b6108bc610711565b73ffffffffffffffffffffffffffffffffffffffff166108da610525565b73ffffffffffffffffffffffffffffffffffffffff1614610939576108fd610711565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016109309190611320565b60405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109ad5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016109a49190611320565b60405180910390fd5b6109b960008383610cdc565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a2f5760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610a269190611320565b60405180910390fd5b610a3b82600083610cdc565b5050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610b775760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610b6e9190611320565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610be95760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610be09190611320565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015610cd6578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610ccd91906110d6565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d2e578060026000828254610d229190611502565b92505081905550610e01565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610dba578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610db19392919061149c565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e4a5780600260008282540392505081905550610e97565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610ef491906110d6565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610f3b578082015181840152602081019050610f20565b60008484015250505050565b6000601f19601f8301169050919050565b6000610f6382610f01565b610f6d8185610f0c565b9350610f7d818560208601610f1d565b610f8681610f47565b840191505092915050565b60006020820190508181036000830152610fab8184610f58565b905092915050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610fe882610fbd565b9050919050565b610ff881610fdd565b811461100357600080fd5b50565b60008135905061101581610fef565b92915050565b6000819050919050565b61102e8161101b565b811461103957600080fd5b50565b60008135905061104b81611025565b92915050565b6000806040838503121561106857611067610fb3565b5b600061107685828601611006565b92505060206110878582860161103c565b9150509250929050565b60008115159050919050565b6110a681611091565b82525050565b60006020820190506110c1600083018461109d565b92915050565b6110d08161101b565b82525050565b60006020820190506110eb60008301846110c7565b92915050565b60008060006060848603121561110a57611109610fb3565b5b600061111886828701611006565b935050602061112986828701611006565b925050604061113a8682870161103c565b9150509250925092565b600060ff82169050919050565b61115a81611144565b82525050565b60006020820190506111756000830184611151565b92915050565b60006020828403121561119157611190610fb3565b5b600061119f8482850161103c565b91505092915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126111cd576111cc6111a8565b5b8235905067ffffffffffffffff8111156111ea576111e96111ad565b5b602083019150836020820283011115611206576112056111b2565b5b9250929050565b60008083601f840112611223576112226111a8565b5b8235905067ffffffffffffffff8111156112405761123f6111ad565b5b60208301915083602082028301111561125c5761125b6111b2565b5b9250929050565b6000806000806040858703121561127d5761127c610fb3565b5b600085013567ffffffffffffffff81111561129b5761129a610fb8565b5b6112a7878288016111b7565b9450945050602085013567ffffffffffffffff8111156112ca576112c9610fb8565b5b6112d68782880161120d565b925092505092959194509250565b6000602082840312156112fa576112f9610fb3565b5b600061130884828501611006565b91505092915050565b61131a81610fdd565b82525050565b60006020820190506113356000830184611311565b92915050565b6000806040838503121561135257611351610fb3565b5b600061136085828601611006565b925050602061137185828601611006565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806113c257607f821691505b6020821081036113d5576113d461137b565b5b50919050565b7f526563697069656e747320616e6420616d6f756e7473206c656e677468206d6960008201527f736d617463680000000000000000000000000000000000000000000000000000602082015250565b6000611437602683610f0c565b9150611442826113db565b604082019050919050565b600060208201905081810360008301526114668161142a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006060820190506114b16000830186611311565b6114be60208301856110c7565b6114cb60408301846110c7565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061150d8261101b565b91506115188361101b565b92508282019050808211156115305761152f6114d3565b5b9291505056fea2646970667358221220f76135c4d736760e161353b3967de8ead4be795b5cf3d7ab3d14b54da05441ae64736f6c634300081c0033";

type ERC20TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20Token__factory extends ContractFactory {
  constructor(...args: ERC20TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    name_: string,
    symbol_: string,
    initialSupply_: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      name_,
      symbol_,
      initialSupply_,
      overrides || {}
    );
  }
  override deploy(
    name_: string,
    symbol_: string,
    initialSupply_: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      name_,
      symbol_,
      initialSupply_,
      overrides || {}
    ) as Promise<
      ERC20Token & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ERC20Token__factory {
    return super.connect(runner) as ERC20Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20TokenInterface {
    return new Interface(_abi) as ERC20TokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ERC20Token {
    return new Contract(address, _abi, runner) as unknown as ERC20Token;
  }
}
